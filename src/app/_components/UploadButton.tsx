"use client"

import { useRouter } from "next/navigation";
import { useUploadThing } from "~/utils/uploadthing"
import { toast } from "sonner"

// inferred input from useUploadThing
type Input = Parameters<typeof useUploadThing>

const useUploadThingInputProps = (...args: Input) => {

  // $ is used in jQuery to distinguish objects stored in variables
  // or as per ECMA 1, 2 & 3 for autogenerated code, but dropped in 5 onwards
  const $ut = useUploadThing(...args);
  
  const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {
    
    // make sure files exist
    if (!e.target.files) return;

    // handle selected files
    const selectedFiles = Array.from(e.target.files);
    const res = await $ut.startUpload(selectedFiles);

    // clg results
    console.log("Uploaded files: " + res)
  }

  return {
    inputProps: {
      onChange,
      multiple: ($ut.permittedFileInfo?.config?.image?.maxFileCount ?? 1) > 1,
      accept: "image/*"
    },
    isUploading: $ut.isUploading,
  }
}

function GenerateUploadButton(): any {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
    <path strokeLinecap="round" strokeLinejoin="round" d="M7.5 7.5h-.75A2.25 2.25 0 0 0 4.5 9.75v7.5a2.25 2.25 0 0 0 2.25 2.25h7.5a2.25 2.25 0 0 0 2.25-2.25v-7.5a2.25 2.25 0 0 0-2.25-2.25h-.75m0-3-3-3m0 0-3 3m3-3v11.25m6-2.25h.75a2.25 2.25 0 0 1 2.25 2.25v7.5a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-.75" />
    </svg>
  )
}

export function SimpleUploadButton() {

  const router = useRouter();
  const { inputProps } = useUploadThingInputProps("imageUploader", {
    onUploadBegin: () => {
      toast("Image(s) uploading...")
    },
    onClientUploadComplete: () => {
      router.refresh();
      toast("Image successfully uploaded.")
    },
  });

  return (
    <div className="bg-blue-500 hover:bg-blue-600/95 rounded-md p-2 pb-3 text-white">
      <label className="cursor-pointer" htmlFor="upload-button">
        <GenerateUploadButton />
      </label>
      <input id="upload-button" type="file" className="sr-only" {...inputProps} />
    </div>
  )
}